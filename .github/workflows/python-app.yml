name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry Action
      uses: snok/install-poetry@v1.3.4
      with:
        version: latest  # Możesz podać konkretną wersję, np. 1.1.14, jeśli potrzebna
        virtualenvs-create: true  # Tworzenie środowiska wirtualnego
        virtualenvs-in-project: true  # Tworzenie środowiska w katalogu projektu
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest

  linting:
    runs-on: ubuntu-latest
    needs: build

    defaults:
      run:
        working-directory: ./example-app

    steps:
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  testing:
    runs-on: ubuntu-latest
    needs: build

    defaults:
      run:
        working-directory: ./example-app

    steps:
    - name: Test with pytest
      run: |
        pytest

  unit-tests:
    runs-on: ubuntu-latest
    needs: build

    defaults:
      run:
        working-directory: ./example-app

    steps:
    - name: Run unit tests with unittest
      run: |
        python -m unittest discover
